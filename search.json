[{"title":"","url":"http://yoursite.com/2018/09/10/从Event Loop谈JS的运行机制/","content":"<h2 id=\"从Event-Loop谈JS的运行机制\"><a href=\"#从Event-Loop谈JS的运行机制\" class=\"headerlink\" title=\"从Event Loop谈JS的运行机制\"></a>从Event Loop谈JS的运行机制</h2><blockquote>\n<h3 id=\"javaScript引擎是单线程\"><a href=\"#javaScript引擎是单线程\" class=\"headerlink\" title=\"javaScript引擎是单线程\"></a><strong>javaScript引擎是单线程</strong></h3></blockquote>\n<ul>\n<li><p>我们都知道javaScript引擎是单线程，为什么不是多线程的呢？想下javaScript的主要作用是用户的互动和DOM的操作，假定javaScript有多个线程，一个线程在DOM节点上添加，同时另一个线程在这时删除这一个节点，这时浏览器应该以哪个线程为主呢？这就会导致很复杂的同步问题。</p>\n</li>\n<li><p>还有一个就是HTML5提出的Web Worker的标准，允许javaScript引擎创建多个子线程，利用多核cpu的计算能力，但是子线程是浏览器开的，完全由主线程控制，而且不能操作DOM，javaScript引擎线程与worker线程间是通过特定的方式通信的（postMessageAPI，需要通过序列化对象来与线程交互特定的数据）</p>\n</li>\n</ul>\n<p><strong>对于Web Worker MDN的官方解释是：</strong></p>\n<p> Web Worker为Web内容在后台线程中运行脚本提供了一种简单的方法。线程可以执行任务而不干扰用户界面，一个worker是使用一个构造函数创建的一个对象(e.g. Worker()) 运行一个命名的JavaScript文件，这个文件包含将在工作线程中运行的代码; workers运行在另一个全局上下文中,不同于当前的window。因此，使用window快捷方式获取当前全局的范围 (而不是self) 在一个 Worker 内将返回错误**</p>\n<ul>\n<li>所以针对大量计算问题非常耗时的工作时，请单独开一个Worker线程，不管这个线程里面发生什么样翻天覆地的变化都不会影响多javaScript主线程，只待计算结果出来之后，将结果通信给主线程，所以javaScript引擎是单线程的这一本质一点都没变（其实还有一个sharedWorker,这里就不做介绍了）<blockquote>\n<h3 id=\"javaScript运行机制\"><a href=\"#javaScript运行机制\" class=\"headerlink\" title=\"javaScript运行机制\"></a><strong>javaScript运行机制</strong></h3></blockquote>\n</li>\n</ul>\n<ul>\n<li>js执行任务分为<strong>同步任务</strong>和<strong>异步任务</strong>，同步任务都在主线程中执行，形成一个执行栈，主线程之外还有一个任务队列（task queue），任务队列是<strong>事件触发线程</strong>管理的，只要异步任务有运行结果时，就会在任务队列中放置一个事件</li>\n<li>一旦执行栈中所有的同步任务执行完毕后，系统就才会去读取任务队列，将任务放入到执行栈中执行（<strong>任务队列是一个先进先出的数据结构</strong>）</li>\n</ul>\n<p>下图是主线程和任务队列的示意图（图片来自参考资料2中）<br><img src=\"https://github.com/shine-HFRao/shine-HFRao.github.io/tree/master/images/js_event_loop.png\" alt=\"image\"></p>\n<p>只要主线程空了，就会去读取”任务队列”，这就是JavaScript的运行机制。这个过程会不断重复</p>\n<blockquote>\n<h3 id=\"事件循环机制\"><a href=\"#事件循环机制\" class=\"headerlink\" title=\"事件循环机制\"></a><strong>事件循环机制</strong></h3></blockquote>\n<p>这里就直接引用一张图片来协助理解：（参考自Philip Roberts的演讲《Help, I’m stuck in an event-loop》，图片来自参考资料2中）<br><img src=\"https://github.com/shine-HFRao/shine-HFRao.github.io/tree/master/images/js_event_loop.png1\" alt=\"image\"></p>\n<ul>\n<li><p>上述循环机制的核心是：<strong>js引擎线程</strong>和<strong>事件触发线程</strong></p>\n</li>\n<li><p>主线程运行时会产生执行栈，栈中的调用某些api时，当满足触发条件后，会将事件放入到事件队列中去</p>\n</li>\n<li><p>但是对于定时器（<strong>setTimeout和setInterval</strong>）来说它是通过<strong>定时器引擎线程</strong>来控制回调函数在等待特定的时间后添加到事件队列中</p>\n</li>\n</ul>\n<p>定时器要注意的一点就是设置的时间间隔：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setTimeout(function()&#123;</span><br><span class=\"line\">    console.log(&apos;2&apos;);</span><br><span class=\"line\">&#125;, 0);</span><br><span class=\"line\"></span><br><span class=\"line\">console.log(&apos;1&apos;);</span><br><span class=\"line\">//执行结果是 先 “1” 后 “2”</span><br></pre></td></tr></table></figure>\n<p>虽然上述的代码中设置的时间间隔是0，但是根据W3C的HTML标准中的规定定时器最小的时间间隔不得低于4ms，低于4ms的间间隔算为4ms，即使是按0ms来，还是会先执行“1”，因为事件队列中任务总是要等到主线程执行完了之后才执行</p>\n<blockquote>\n<h3 id=\"setTimeOut和setInterval在事件循环机制中的区别\"><a href=\"#setTimeOut和setInterval在事件循环机制中的区别\" class=\"headerlink\" title=\"setTimeOut和setInterval在事件循环机制中的区别\"></a><strong>setTimeOut和setInterval在事件循环机制中的区别</strong></h3></blockquote>\n<ul>\n<li><p>主线程设置一个定时器后，setInterval在每个一段时间都会执行一个回调函数（回调函数就会被定时器引擎线程放入到事件队列中去），但是当主线程执行时间很长（时间大于好几个setInterval设置的时间间隔），那么事件队列中就会存在有好几个setInterval的回调函数，在主线程执行完后去执行事件队列中的事件，那么堆叠着的定时器回调函数就会连续执行（累计效应），setTimeOut没有这样的问题</p>\n</li>\n<li><p>还有一种情况就是把浏览器最小化后，setInterval并不是不执行程序，回调函数还是会被放到事件队列中去，但是不会被执行，当浏览器打开以后，这些回调函数就会被一起全部执行</p>\n</li>\n<li>所以最好的方法就是用setTimeOut来模拟setInterval，或者用requestAnimationFrame</li>\n<li><strong>补充：JS高程中有提到，JS引擎会对setInterval进行优化，如果当前事件队列中有setInterval的回调，不会重复添加。不过，仍然是有很多问题。。。</strong><blockquote>\n<h3 id=\"事件循环进阶：macrotask与microtask\"><a href=\"#事件循环进阶：macrotask与microtask\" class=\"headerlink\" title=\"事件循环进阶：macrotask与microtask\"></a><strong>事件循环进阶：macrotask与microtask</strong></h3></blockquote>\n</li>\n<li>上面讲的事件循环机制在es5中的情况是够用了，但是es6中就会遇到一些问题了<br>如下题：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">console.log(&apos;script start&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">setTimeout(function() &#123;</span><br><span class=\"line\">    console.log(&apos;setTimeout&apos;);</span><br><span class=\"line\">&#125;, 0);</span><br><span class=\"line\"></span><br><span class=\"line\">Promise.resolve().then(function() &#123;</span><br><span class=\"line\">    console.log(&apos;promise1&apos;);</span><br><span class=\"line\">&#125;).then(function() &#123;</span><br><span class=\"line\">    console.log(&apos;promise2&apos;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">console.log(&apos;script end&apos;);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>他执行的正确顺序是:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">script start</span><br><span class=\"line\">script end</span><br><span class=\"line\">promise1</span><br><span class=\"line\">promise2</span><br><span class=\"line\">setTimeout</span><br></pre></td></tr></table></figure>\n<p>这个知识点自己接触的较少，<a href=\"http://www.dailichun.com/2018/01/21/js_singlethread_eventloop.html\" target=\"_blank\" rel=\"noopener\">参考http://www.dailichun.com/2018/01/21/js_singlethread_eventloop.html</a></p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a><strong>总结</strong></h2><h2 id=\"参考资料：\"><a href=\"#参考资料：\" class=\"headerlink\" title=\"参考资料：\"></a><strong>参考资料：</strong></h2><p><a href=\"http://www.ruanyifeng.com/blog/2014/10/event-loop.html\" target=\"_blank\" rel=\"noopener\">http://www.ruanyifeng.com/blog/2014/10/event-loop.html</a><br><a href=\"http://www.dailichun.com/2018/01/21/js_singlethread_eventloop.html\" target=\"_blank\" rel=\"noopener\">http://www.dailichun.com/2018/01/21/js_singlethread_eventloop.html</a></p>\n","categories":[],"tags":[]},{"title":"Event_Loop","url":"http://yoursite.com/2018/09/10/Event-Loop/","content":"<h2 id=\"��Event-Loop̸JS�����л���\"><a href=\"#��Event-Loop̸JS�����л���\" class=\"headerlink\" title=\"��Event Loop̸JS�����л���\"></a>��Event Loop̸JS�����л���</h2><blockquote>\n<h3 id=\"javaScript�����g��߳�\"><a href=\"#javaScript�����g��߳�\" class=\"headerlink\" title=\"javaScript�����ǵ��߳�\"></a><strong>javaScript�����ǵ��߳�</strong></h3></blockquote>\n<ul>\n<li><p>���Ƕ�֪��javaScript�����ǵ��̣߳�Ϊʲô���Ƕ��̵߳��أ�����javaScript����Ҫ�������û��Ļ�����DOM�Ĳ������ٶ�javaScript�ж���̣߳�һ���߳���DOM�ڵ�����ӣ�ͬʱ��һ���߳�����ʱɾ����һ���ڵ㣬��ʱ�����Ӧ�����ĸ��߳�Ϊ���أ���ͻᵼ�ºܸ��ӵ�ͬ�����⡣</p>\n</li>\n<li><p>����һ������HTML5�����Web Worker�ı�׼������javaScript���洴��������̣߳����ö��cpu�ļ����������������߳�����������ģ���ȫ�����߳̿��ƣ����Ҳ��ܲ���DOM��javaScript�����߳���worker�̼߳���ͨ���ض��ķ�ʽͨ�ŵģ�postMessageAPI����Ҫͨ�����л����������߳̽����ض������ݣ�</p>\n</li>\n</ul>\n<p><strong>����Web Worker MDN�Ĺٷ������ǣ�</strong></p>\n<p> Web WorkerΪWeb�����ں�̨�߳������нű��ṩ��һ�ּ򵥵ķ������߳̿���ִ��������������û����棬һ��worker��ʹ��һ�����캯��������һ������(e.g. Worker()) ����һ��������JavaScript�ļ�������ļ��������ڹ����߳������еĴ���; workers��������һ��ȫ����������,��ͬ�ڵ�ǰ��window����ˣ�ʹ��window��ݷ�ʽ��ȡ��ǰȫ�ֵķ�Χ (������self) ��һ�� Worker �ڽ����ش���**</p>\n<ul>\n<li>������Դ�����������ǳ���ʱ�Ĺ���ʱ���뵥����һ��Worker�̣߳���������߳����淢��ʲô�����츲�صı仯������Ӱ���javaScript���̣߳�ֻ������������֮�󣬽����ͨ�Ÿ����̣߳�����javaScript�����ǵ��̵߳���һ����һ�㶼û�䣨��ʵ����һ��sharedWorker,����Ͳ��������ˣ�<blockquote>\n<h3 id=\"javaScript���л���\"><a href=\"#javaScript���л���\" class=\"headerlink\" title=\"javaScript���л���\"></a><strong>javaScript���л���</strong></h3></blockquote>\n</li>\n</ul>\n<ul>\n<li>jsִ�������Ϊ<strong>ͬ������</strong>��<strong>�첽����</strong>��ͬ�����������߳���ִ�У��γ�һ��ִ��ջ�����߳�֮�⻹��һ��������У�task queue�������������<strong>�¼������߳�</strong>����ģ�ֻҪ�첽���������н��ʱ���ͻ�����������з���һ���¼�</li>\n<li>һ��ִ��ջ�����е�ͬ������ִ����Ϻ�ϵͳ�ͲŻ�ȥ��ȡ������У���������뵽ִ��ջ��ִ�У�<strong>���������һ���Ƚ��ȳ������ݽṹ</strong>��</li>\n</ul>\n<p>��ͼ�����̺߳�������е�ʾ��ͼ��ͼƬ���Բο�����2�У�<br><img src=\"https://github.com/shine-HFRao/shine-HFRao.github.io/tree/master/images/js_event_loop.png\" alt=\"image\"></p>\n<p>ֻҪ���߳̿��ˣ��ͻ�ȥ��ȡ”�������”�������JavaScript�����л��ơ�������̻᲻���ظ�</p>\n<blockquote>\n<h3 id=\"�¼�ѭ������\"><a href=\"#�¼�ѭ������\" class=\"headerlink\" title=\"�¼�ѭ������\"></a><strong>�¼�ѭ������</strong></h3></blockquote>\n<p>�����ֱ������һ��ͼƬ��Э����⣺���ο���Philip Roberts���ݽ���Help, I��m stuck in an event-loop����ͼƬ���Բο�����2�У�<br><img src=\"https://github.com/shine-HFRao/shine-HFRao.github.io/tree/master/images/js_event_loop.png1\" alt=\"image\"></p>\n<ul>\n<li><p>����ѭ�����Ƶĺ����ǣ�<strong>js�����߳�</strong>��<strong>�¼������߳�</strong></p>\n</li>\n<li><p>���߳�����ʱ�����ִ��ջ��ջ�еĵ���ĳЩapiʱ�������㴥�������󣬻Ὣ�¼����뵽�¼�������ȥ</p>\n</li>\n<li><p>���Ƕ��ڶ�ʱ����<strong>setTimeout��setInterval</strong>����˵����ͨ��<strong>��ʱ�������߳�</strong>�����ƻص������ڵȴ��ض���ʱ�����ӵ��¼�������</p>\n</li>\n</ul>\n<p>��ʱ��Ҫע���һ��������õ�ʱ����</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setTimeout(function()&#123;</span><br><span class=\"line\">    console.log(&apos;2&apos;);</span><br><span class=\"line\">&#125;, 0);</span><br><span class=\"line\"></span><br><span class=\"line\">console.log(&apos;1&apos;);</span><br><span class=\"line\">//ִ�н���� �� ��1�� �� ��2��</span><br></pre></td></tr></table></figure>\n<p>��Ȼ�����Ĵ��������õ�ʱ������0�����Ǹ���W3C��HTML��׼�еĹ涨��ʱ����С��ʱ����õ���4ms������4ms�ļ�����Ϊ4ms����ʹ�ǰ�0ms�������ǻ���ִ�С�1������Ϊ�¼���������������Ҫ�ȵ����߳�ִ������֮���ִ��</p>\n<blockquote>\n<h3 id=\"setTimeOut��setInterval���¼�ѭ�������е�����\"><a href=\"#setTimeOut��setInterval���¼�ѭ�������е�����\" class=\"headerlink\" title=\"setTimeOut��setInterval���¼�ѭ�������е�����\"></a><strong>setTimeOut��setInterval���¼�ѭ�������е�����</strong></h3></blockquote>\n<ul>\n<li><p>���߳�����һ����ʱ����setInterval��ÿ��һ��ʱ�䶼��ִ��һ���ص��������ص������ͻᱻ��ʱ�������̷߳��뵽�¼�������ȥ�������ǵ����߳�ִ��ʱ��ܳ���ʱ����ںü���setInterval���õ�ʱ�������ô�¼������оͻ�����кü���setInterval�Ļص������������߳�ִ�����ȥִ���¼������е��¼�����ô�ѵ��ŵĶ�ʱ���ص������ͻ�����ִ�У��ۼ�ЧӦ����setTimeOutû������������</p>\n</li>\n<li><p>����һ��������ǰ��������С����setInterval�����ǲ�ִ�г��򣬻ص��������ǻᱻ�ŵ��¼�������ȥ�����ǲ��ᱻִ�У�����������Ժ���Щ�ص������ͻᱻһ��ȫ��ִ��</p>\n</li>\n<li>������õķ���������setTimeOut��ģ��setInterval��������requestAnimationFrame</li>\n<li><strong>���䣺JS�߳������ᵽ��JS������setInterval�����Ż��������ǰ�¼���������setInterval�Ļص��������ظ���ӡ���������Ȼ���кܶ����⡣����</strong><blockquote>\n<h3 id=\"�¼�ѭ�����ף�macrotask��microtask\"><a href=\"#�¼�ѭ�����ף�macrotask��microtask\" class=\"headerlink\" title=\"�¼�ѭ�����ף�macrotask��microtask\"></a><strong>�¼�ѭ�����ף�macrotask��microtask</strong></h3></blockquote>\n</li>\n<li>���潲���¼�ѭ��������es5�е�����ǹ����ˣ�����es6�оͻ�����һЩ������<br>�����⣺<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">console.log(&apos;script start&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">setTimeout(function() &#123;</span><br><span class=\"line\">    console.log(&apos;setTimeout&apos;);</span><br><span class=\"line\">&#125;, 0);</span><br><span class=\"line\"></span><br><span class=\"line\">Promise.resolve().then(function() &#123;</span><br><span class=\"line\">    console.log(&apos;promise1&apos;);</span><br><span class=\"line\">&#125;).then(function() &#123;</span><br><span class=\"line\">    console.log(&apos;promise2&apos;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">console.log(&apos;script end&apos;);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>��ִ�е���ȷ˳����:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">script start</span><br><span class=\"line\">script end</span><br><span class=\"line\">promise1</span><br><span class=\"line\">promise2</span><br><span class=\"line\">setTimeout</span><br></pre></td></tr></table></figure>\n<p>���֪ʶ���Լ��Ӵ��Ľ��٣�<a href=\"http://www.dailichun.com/2018/01/21/js_singlethread_eventloop.html\" target=\"_blank\" rel=\"noopener\">�ο�http://www.dailichun.com/2018/01/21/js_singlethread_eventloop.html</a></p>\n<h2 id=\"�ܽ�\"><a href=\"#�ܽ�\" class=\"headerlink\" title=\"�ܽ�\"></a><strong>�ܽ�</strong></h2><h2 id=\"�ο����ϣ�\"><a href=\"#�ο����ϣ�\" class=\"headerlink\" title=\"�ο����ϣ�\"></a><strong>�ο����ϣ�</strong></h2><p><a href=\"http://www.ruanyifeng.com/blog/2014/10/event-loop.html\" target=\"_blank\" rel=\"noopener\">http://www.ruanyifeng.com/blog/2014/10/event-loop.html</a><br><a href=\"http://www.dailichun.com/2018/01/21/js_singlethread_eventloop.html\" target=\"_blank\" rel=\"noopener\">http://www.dailichun.com/2018/01/21/js_singlethread_eventloop.html</a></p>\n","categories":[],"tags":[]},{"title":"Hello World","url":"http://yoursite.com/2018/08/15/hello-world/","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","categories":[],"tags":[]},{"title":"category","url":"http://yoursite.com/category/index.html","content":"","categories":[],"tags":[]},{"title":"about","url":"http://yoursite.com/about/index.html","content":"","categories":[],"tags":[]},{"title":"link","url":"http://yoursite.com/link/index.html","content":"","categories":[],"tags":[]},{"title":"project","url":"http://yoursite.com/project/index.html","content":"","categories":[],"tags":[]},{"title":"search","url":"http://yoursite.com/search/index.html","content":"","categories":[],"tags":[]},{"title":"tag","url":"http://yoursite.com/tag/index.html","content":"","categories":[],"tags":[]}]